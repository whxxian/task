{"version":3,"sources":["style/card.module.less","utils/user.ts","components/id-select.tsx","components/user-select.tsx","page/project-list/search-panel.tsx","components/pin.tsx","utils/reorder.ts","utils/use-optimistic-options.ts","utils/project.ts","utils/url.ts","page/project-list/util.ts","page/project-list/list.tsx","page/project-list/index.tsx","types/dnd.ts","utils/task.ts","page/project-panel/utils.ts","utils/panel.ts","utils/task-type.ts","assets/task.svg","assets/bug.svg","page/project-panel/create-task.tsx","components/mark.tsx","components/drag-n-drop.tsx","page/project-panel/panel-column.tsx","components/task-type-select.tsx","page/project-panel/search-panel.tsx","page/project-panel/create-panel.tsx","page/project-panel/task-modal.tsx","page/project-panel/index.tsx","page/Epic/utils.ts","page/Epic/create-epic.tsx","utils/epic.ts","page/Epic/index.tsx","page/project/index.tsx","page/project-list/project-modal.tsx","components/project-popover.tsx","components/user-popover.tsx","authenticated-app.tsx"],"names":["module","exports","useUsers","param","client","useHttp","useQuery","data","IdSelect","props","value","onChange","defaultOptionName","options","rest","length","toNum","undefined","Option","map","option","key","id","name","val","isNaN","Number","UserSelect","users","SearchPanel","setParam","style","marginBottom","layout","Item","type","placeholder","event","target","personId","Pin","checked","onCheckedChange","count","num","reorder","fromId","referenceId","list","copiedList","movingItemIndex","findIndex","item","insertAfter","targetIndex","insertBefore","from","to","toItem","removedItem","splice","toIndex","indexOf","useConfig","queryKey","callback","queryClient","useQueryClient","onSuccess","invalidateQueries","onMutate","prevItems","getQueryData","setQueryData","old","onError","error","newItem","context","useDeleteConfig","filter","useEditConfig","useAddConfig","useProjects","useEditProject","useMutation","params","method","useAddProject","useProject","enabled","useURLQueryParam","keys","useSearchParams","searchParams","setSearchParams","useMemo","reduce","previousValue","currentValue","get","o","cleanObject","Object","fromEntries","useSetSearchParams","useProjectSearchParams","projectParam","useProjectQueryKey","useProjectModal","editProjectId","setEditProjectId","projectCreate","setProjectCreate","editProject","isLoading","projectModalOpen","open","close","startEdit","List","React","memo","mutate","rowKey","pagination","columns","title","disabled","render","project","pin","sorter","a","b","localeCompare","dataIndex","find","user","dayjs","format","More","deleteProject","useDeleteProject","overlay","onClick","Modal","confirm","okText","cancelText","onOk","onDelete","ProjectListPage","useDocumentTitle","useDebounce","Container","justify","align","loading","dataSource","whyDidYouRender","DNDTypes","styled","div","useTasks","useReorderTask","kanbanId","toKanbanId","useReorderTaskConfig","useProjectIdInURL","useLocation","pathname","match","useProjectInUrl","usePanelSearchParams","projectId","usePanelQueryKey","useTasksSearchParams","typeId","processorId","useTaskQueryKey","useTaskModal","editingTaskId","setEditingTaskId","useTask","editingTask","useCallback","usePanels","useReorderPanel","useReorderKanbanConfig","useTaskTypes","CreateTask","useState","setName","inputMode","setInputMode","addTask","useAddTask","mutateAsync","submit","useEffect","autoFocus","onPressEnter","mode","Mark","keyword","arr","split","str","index","color","Drop","children","provided","droppableProps","ref","innerRef","DropChild","Drag","draggableProps","dragHandleProps","PanelColumn","panel","allTasks","tasks","task","between","TasksContainer","droppableId","ROW","direction","minHeight","draggableId","TaskTypeIcon","taskTypes","taskType","src","taskIcon","bugIcon","alt","TaskCard","deleteTask","useDeleteTask","cursor","className","DeleteTaskBtn","evt","stopPropagation","MoreBtn","deletePanel","useDeletePanel","TaskTypeSelect","searchParam","gap","width","tagId","CreatePanel","addPanel","useAddPanel","size","labelCol","span","wrapperCol","TaskModal","useForm","form","useEditTask","editTask","editLoading","getFieldsValue","setFieldsValue","confirmLoading","visible","onCancel","resetFields","forceRender","initialValues","label","rules","required","message","ProjectPanel","currentProject","panels","panelIsLoading","onDragEnd","useDragEnd","ColumnContainer","COLUMN","display","reorderPanel","reorderTask","source","destination","toId","fromPanelId","toPanelId","fromTask","toTask","fromKanbanId","useEpicSearchParams","useEpicsQueryKey","CreateEpic","useAddEpic","addEpic","onFinish","values","onClose","destroyOnClose","textAlign","htmlType","EpicPage","epics","useEpics","deleteEpic","useDeleteEpic","epitCreateOpen","setEpicCreateOpen","overflowY","itemLayout","renderItem","epic","Meta","content","confirmDeleteEpic","description","epicId","ProjectPage","routeType","unit","useRouteType","Aside","selectedKeys","Main","path","element","window","location","replace","aside","ProjectModal","console","log","mutateLoading","then","ProjectPopover","projects","refetch","pinedProjects","ContentContainer","Text","backgroundColor","onVisibleChange","placement","UserPopover","PageHeader","Header","HeaderLeft","resetRoute","HeaderRight","User","useAuth","logout","e","preventDefault","Row","main","AuthenticatedApp"],"mappings":"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","file":"static/js/5.7a66b933.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskCard\":\"card_TaskCard__1WDpG\",\"DeleteTaskBtn\":\"card_DeleteTaskBtn__2foC3\"};","import { useHttp } from \"./http\";\nimport { User } from \"../types/user\";\nimport { useQuery } from \"react-query\";\n\nexport const useUsers = (param?: Partial<User>) => {\n  const client = useHttp();\n  return useQuery<User[]>(\"user\", () =>\n    client(`users`, {\n      data: param,\n    })\n  );\n};\n","import { Raw } from \"../types\";\nimport { Select } from \"antd\";\nimport React from \"react\";\n\n// React自带的类型映射,拿到组件的Props\ntype SelectProps = React.ComponentProps<typeof Select>;\n\ninterface IdSelectProps\n  extends Omit<SelectProps, \"value\" | \"onChange\" | \"options\"> {\n  value?: Raw | null | undefined;\n  onChange?: (value?: number) => void;\n  defaultOptionName?: string;\n  options?: {\n    name: string;\n    id: number;\n  }[];\n}\n\n/**\n * value可以传入多种类型的值\n * onChange只会回调number|undefined类型\n * 当isNaN(+value)为true是，代表选择默认类型, 触发onChange(undefined)\n * @param props\n * @constructor\n */\nexport const IdSelect = (props: IdSelectProps) => {\n  const { value, onChange, defaultOptionName, options, ...rest } = props;\n  return (\n    <Select\n      value={options?.length ? toNum(value) : 0}\n      onChange={(value) => onChange?.(toNum(value) || undefined)}\n      {...rest}\n    >\n      {defaultOptionName ? (\n        <Select.Option value={0}>{defaultOptionName}</Select.Option>\n      ) : null}\n      {options?.map((option) => (\n        <Select.Option key={option.id} value={option.id}>\n          {option.name}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n\nconst toNum = (val: unknown) => (isNaN(Number(val)) ? 0 : Number(val));\n","import { useUsers } from \"../utils/user\";\nimport { IdSelect } from \"./id-select\";\nimport React from \"react\";\n\nexport const UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  const { data: users } = useUsers();\n  return <IdSelect options={users || []} {...props} />;\n};\n","import React from \"react\";\nimport { Form, Input } from \"antd\";\nimport { UserSelect } from \"../../components/user-select\";\nimport { Project } from \"../../types/project\";\nimport { User } from \"../../types/user\";\n\ninterface SearchPanelProps {\n  users: User[];\n  param: Pick<Project, \"personId\" | \"name\">;\n  setParam: (param: SearchPanelProps[\"param\"]) => void;\n}\n\nexport const SearchPanel = ({ param, setParam, users }: SearchPanelProps) => {\n  return (\n    <Form style={{ marginBottom: \"2rem\" }} layout={\"inline\"}>\n      <Form.Item>\n        <Input\n          type=\"text\"\n          value={param.name}\n          placeholder={\"项目名\"}\n          onChange={(event) =>\n            setParam({\n              ...param,\n              name: event.target.value,\n            })\n          }\n        />\n      </Form.Item>\n      <Form.Item>\n        <UserSelect\n          value={param.personId}\n          defaultOptionName={\"负责人\"}\n          onChange={(value) => setParam({ ...param, personId: value })}\n        />\n      </Form.Item>\n    </Form>\n  );\n};\n","import React from \"react\";\nimport { Rate } from \"antd\";\n\ninterface PinProps extends React.ComponentProps<typeof Rate> {\n  checked: boolean;\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nexport const Pin: React.FC<PinProps> = (props) => {\n  const { checked, onCheckedChange, ...rest } = props;\n  return (\n    <Rate\n      count={1}\n      value={checked ? 1 : 0}\n      onChange={(num) => onCheckedChange?.(!!num)}\n      {...rest}\n    />\n  );\n};\n","/**\n * 在本地对排序进行乐观更新\n * @param fromId 要排序的项目的id\n * @param type 'before' | 'after'\n * @param referenceId 参照id\n * @param list 要排序的列表, 比如tasks, kanbans\n */\nexport const reorder = ({\n  fromId,\n  type,\n  referenceId,\n  list,\n}: {\n  list: { id: number }[];\n  fromId: number;\n  type: \"after\" | \"before\";\n  referenceId: number;\n}) => {\n  const copiedList = [...list];\n  // 找到fromId对应项目的下标\n  const movingItemIndex = copiedList.findIndex((item) => item.id === fromId);\n  if (!referenceId) {\n    return insertAfter([...copiedList], movingItemIndex, copiedList.length - 1);\n  }\n  const targetIndex = copiedList.findIndex((item) => item.id === referenceId);\n  const insert = type === \"after\" ? insertAfter : insertBefore;\n  return insert([...copiedList], movingItemIndex, targetIndex);\n};\n\n/**\n * 在list中，把from放在to的前边\n * @param list\n * @param from\n * @param to\n */\nconst insertBefore = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex, 0, removedItem);\n  return list;\n};\n\n/**\n * 在list中，把from放在to的后面\n * @param list\n * @param from\n * @param to\n */\nconst insertAfter = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex + 1, 0, removedItem);\n  return list;\n};\n","import { QueryKey, useQueryClient } from \"react-query\";\nimport { Task } from \"../types/task\";\nimport { reorder } from \"./reorder\";\n\nexport const useConfig = (\n  queryKey: QueryKey,\n  callback: (target: any, old?: any) => any\n) => {\n  const queryClient = useQueryClient();\n  return {\n    onSuccess: () => queryClient.invalidateQueries(queryKey),\n    async onMutate(target: any) {\n      const prevItems = queryClient.getQueryData(queryKey);\n      queryClient.setQueryData(queryKey, (old) => {\n        return callback(target, old);\n      });\n      return { prevItems };\n    },\n    onError: (error: any, newItem: any, context: any) => {\n      queryClient.setQueryData(\n        queryKey,\n        (context as { prevItems: any }).prevItems\n      );\n    },\n  };\n};\n\nexport const useDeleteConfig = (queryKey: any) =>\n  useConfig(\n    queryKey,\n    (target, old) => old?.filter((item: any) => item.id !== target.id) || []\n  );\nexport const useEditConfig = (queryKey: any) =>\n  useConfig(\n    queryKey,\n    (target, old) =>\n      old?.map((item: any) =>\n        item.id === target.id ? { ...item, ...target } : item\n      ) || []\n  );\nexport const useAddConfig = (queryKey: any) =>\n  useConfig(queryKey, (target, old) => (old ? [...old, target] : []));\n\nexport const useReorderKanbanConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => reorder({ list: old, ...target }));\n\nexport const useReorderTaskConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => {\n    const orderedList = reorder({ list: old, ...target }) as Task[];\n    return orderedList.map((item) =>\n      item.id === target.fromId\n        ? { ...item, kanbanId: target.toKanbanId }\n        : item\n    );\n  });\n","import { useHttp } from \"./http\";\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useEditConfig,\n} from \"./use-optimistic-options\";\nimport { Project } from \"../types/project\";\n\nexport const useProjects = (param?: Partial<Project>) => {\n  const client = useHttp();\n  return useQuery<Project[]>([\"projects\", param], () =>\n    client(\"projects\", { data: param })\n  );\n};\n\nexport const useEditProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Project>) =>\n      client(`projects/${params.id}`, {\n        method: \"PATCH\",\n        data: params,\n      }),\n    useEditConfig(queryKey)\n  );\n};\n\nexport const useAddProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Project>) =>\n      client(`projects`, {\n        method: \"POST\",\n        data: params,\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useProject = (id?: number) => {\n  const client = useHttp();\n  return useQuery<Project>(\n    [\"project\", { id }],\n    () => client(`projects/${id}`),\n    {\n      enabled: !!id, // 只有当id为truly才会触发useQuery的query\n    }\n  );\n};\n\nexport const useDeleteProject = (queryKey?: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`projects/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n","/**\n * 返回页面URL中的key-value\n */\nimport { useMemo } from \"react\";\nimport { URLSearchParamsInit, useSearchParams } from \"react-router-dom\";\nimport { cleanObject } from \"./index\";\n\nexport const useURLQueryParam = <K extends string>(keys: K[]) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  return [\n    useMemo(\n      () =>\n        keys.reduce((previousValue, currentValue) => {\n          return {\n            ...previousValue,\n            [currentValue]: searchParams.get(currentValue) || \"\",\n          };\n        }, {} as { [key in K]: string }),\n      [searchParams]\n    ),\n    (params: Partial<{ [key in K]: unknown }>) => {\n      const o = cleanObject({\n        ...Object.fromEntries(searchParams),\n        ...params,\n      }) as URLSearchParamsInit;\n      return setSearchParams(o);\n    },\n  ] as const;\n};\n\nexport const useSetSearchParams = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  return <K extends string>(params: Partial<{ [key in K]: unknown }>) => {\n    const o = cleanObject({\n      ...Object.fromEntries(searchParams),\n      ...params,\n    }) as URLSearchParamsInit;\n    return setSearchParams(o);\n  };\n};\n","import { useSetSearchParams, useURLQueryParam } from \"../../utils/url\";\nimport { useMemo } from \"react\";\nimport { useProject } from \"../../utils/project\";\n\nexport const useProjectSearchParams = () => {\n  const [param, setParam] = useURLQueryParam([\"name\", \"personId\"]);\n  const projectParam = {\n    ...param,\n    personId: Number(param.personId) || undefined,\n  };\n  return [useMemo(() => projectParam, [param]), setParam] as const;\n};\n\nexport const useProjectQueryKey = () => {\n  const [params] = useProjectSearchParams();\n  return [\"projects\", params];\n};\n\nexport const useProjectModal = () => {\n  const [{ editProjectId }, setEditProjectId] = useURLQueryParam([\n    \"editProjectId\",\n  ]);\n  const [{ projectCreate }, setProjectCreate] = useURLQueryParam([\n    \"projectCreate\",\n  ]);\n  const { data: editProject, isLoading } = useProject(+editProjectId);\n  const setSearchParams = useSetSearchParams();\n  const open = () => setProjectCreate({ projectCreate: true });\n  const close = () => {\n    setSearchParams({ projectCreate: \"\", editProjectId: \"\" });\n  };\n  const startEdit = (id: number) => setEditProjectId({ editProjectId: id });\n  return {\n    projectModalOpen: projectCreate === \"true\" || !!editProjectId,\n    open,\n    close,\n    startEdit,\n    editProject,\n    isLoading,\n  };\n};\n","import React from \"react\";\nimport { Dropdown, Menu, Modal, Table, TableProps } from \"antd\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport { Pin } from \"../../components/pin\";\nimport { useDeleteProject, useEditProject } from \"../../utils/project\";\nimport { ButtonNoPad } from \"components/libs\";\nimport { useProjectModal, useProjectQueryKey } from \"./util\";\nimport { Project } from \"../../types/project\";\nimport { User } from \"../../types/user\";\n\ninterface ListProps extends TableProps<Project> {\n  users: User[];\n}\n\nexport const List = React.memo(({ users, ...props }: ListProps) => {\n  const { mutate } = useEditProject(useProjectQueryKey());\n  const pinProject = (id: number) => (pin: boolean) => mutate({ id, pin });\n\n  return (\n    <Table\n      rowKey={\"id\"}\n      pagination={false}\n      columns={[\n        {\n          title: <Pin checked={true} disabled={true} />,\n          render(value, project) {\n            return (\n              <Pin\n                checked={project.pin}\n                onCheckedChange={pinProject(project.id)}\n              />\n            );\n          },\n        },\n        {\n          title: \"名称\",\n          sorter: (a, b) => a.name.localeCompare(b.name),\n          // render函数参数为,当前行的值，当前行数据，index\n          render(value, project) {\n            return <Link to={`${project.id}`}>{project.name}</Link>;\n          },\n        },\n        {\n          title: \"部门\",\n          dataIndex: \"organization\",\n        },\n        {\n          title: \"负责人\",\n          render(value, project) {\n            return (\n              <span>\n                {users.find((user) => user.id === project.personId)?.name ||\n                  \"未知\"}\n              </span>\n            );\n          },\n        },\n        {\n          title: \"创建时间\",\n          render() {\n            return <span>{dayjs().format(\"YYYY-MM-DD\")}</span>;\n          },\n        },\n        {\n          render(value, project) {\n            return <More project={project} />;\n          },\n        },\n      ]}\n      {...props}\n    />\n  );\n});\n\nconst More = ({ project }: { project: Project }) => {\n  const { startEdit } = useProjectModal();\n  const { mutate: deleteProject } = useDeleteProject(useProjectQueryKey());\n  const editProject = (id: number) => () => startEdit(id);\n  const onDelete = (id: number) => {\n    Modal.confirm({\n      title: \"确定删除么\",\n      okText: \"确定\",\n      cancelText: \"取消\",\n      onOk() {\n        deleteProject({ id });\n      },\n    });\n  };\n  return (\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item key={\"edit\"}>\n            <ButtonNoPad type={\"link\"} onClick={editProject(project.id)}>\n              编辑\n            </ButtonNoPad>\n          </Menu.Item>\n          <Menu.Item>\n            <ButtonNoPad type={\"link\"} onClick={() => onDelete(project.id)}>\n              删除\n            </ButtonNoPad>\n          </Menu.Item>\n        </Menu>\n      }\n    >\n      <ButtonNoPad type={\"link\"}>...</ButtonNoPad>\n    </Dropdown>\n  );\n};\n","import React from \"react\";\nimport { SearchPanel } from \"./search-panel\";\nimport { List } from \"./list\";\nimport { useDebounce, useDocumentTitle } from \"../../utils\";\nimport styled from \"@emotion/styled\";\nimport { Row } from \"antd\";\nimport { useProjects } from \"../../utils/project\";\nimport { useUsers } from \"../../utils/user\";\nimport { useProjectModal, useProjectSearchParams } from \"./util\";\nimport { ButtonNoPad, ErrorBox } from \"../../components/libs\";\n\nexport const ProjectListPage = () => {\n  useDocumentTitle(\"项目列表\", false);\n  const { open } = useProjectModal();\n  const [param, setParam] = useProjectSearchParams();\n  // 防抖\n  const { isLoading, data: list, error } = useProjects(useDebounce(param, 200));\n  const { data: users } = useUsers();\n  return (\n    <Container>\n      <Row justify={\"space-between\"} align={\"middle\"}>\n        <h1>项目列表</h1>\n        <ButtonNoPad type={\"link\"} onClick={open}>\n          创建项目\n        </ButtonNoPad>\n      </Row>\n      <SearchPanel param={param} setParam={setParam} users={users || []} />\n      {error ? <ErrorBox error={error} /> : null}\n      <List loading={isLoading} dataSource={list || []} users={users || []} />\n    </Container>\n  );\n};\nProjectListPage.whyDidYouRender = true;\n\nconst Container = styled.div`\n  padding: 3.2rem;\n`;\n","export enum DNDTypes {\n  COLUMN = \"COLUMN\",\n  ROW = \"ROW\",\n}\n","import { useHttp } from \"./http\";\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Task } from \"../types/task\";\nimport {\n  useAddConfig,\n  useEditConfig,\n  useReorderTaskConfig,\n} from \"./use-optimistic-options\";\nimport { SortProps } from \"./panel\";\n\nexport const useTasks = (param?: Partial<Task>) => {\n  const client = useHttp();\n  return useQuery<Task[]>([\"tasks\", param], () =>\n    client(\"tasks\", { data: param })\n  );\n};\n\nexport const useTask = (id: number) => {\n  const client = useHttp();\n  return useQuery<Task>([\"tasks\", { id }], () => client(`tasks/${id}`), {\n    enabled: !!id,\n  });\n};\nexport const useAddTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Task>) =>\n      client(`tasks`, {\n        method: \"POST\",\n        data: params,\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useEditTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Task>) =>\n      client(`tasks/${params.id}`, {\n        method: \"PATCH\",\n        data: params,\n      }),\n    useEditConfig(queryKey)\n  );\n};\n\nexport const useDeleteTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`tasks/${id}`, {\n        method: \"DELETE\",\n      }),\n    useEditConfig(queryKey)\n  );\n};\n\nexport const useReorderTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: SortProps) => {\n    return client(\"tasks/reorder\", {\n      data: params,\n      method: \"POST\",\n    });\n  }, useReorderTaskConfig(queryKey));\n};\n","import { useLocation } from \"react-router-dom\";\nimport { useProject } from \"../../utils/project\";\nimport { useURLQueryParam } from \"../../utils/url\";\nimport { useCallback, useMemo } from \"react\";\nimport { useTask } from \"../../utils/task\";\nimport { useDebounce } from \"../../utils\";\n\nexport const useProjectIdInURL = () => {\n  const { pathname } = useLocation();\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\n  return id ? +id : undefined;\n};\n\nexport const useProjectInUrl = () => useProject(useProjectIdInURL());\nexport const usePanelSearchParams = () => ({ projectId: useProjectIdInURL() });\nexport const usePanelQueryKey = () => [\"panel\", usePanelSearchParams()];\n\nexport const useTasksSearchParams = () => {\n  const [param] = useURLQueryParam([\"name\", \"typeId\", \"processorId\", \"tagId\"]);\n  const projectId = useProjectIdInURL();\n  return useMemo(\n    () => ({\n      projectId,\n      typeId: Number(param.typeId) || undefined,\n      processorId: Number(param.processorId) || undefined,\n      name: param.name,\n    }),\n    [projectId, param]\n  );\n};\nexport const useTaskQueryKey = () => [\"tasks\", useTasksSearchParams()];\n\nexport const useTaskModal = () => {\n  const [{ editingTaskId }, setEditingTaskId] = useURLQueryParam([\n    \"editingTaskId\",\n  ]);\n  const { data: editingTask, isLoading } = useTask(+editingTaskId);\n  const startEdit = useCallback(\n    (id: number) => {\n      setEditingTaskId({ editingTaskId: id });\n    },\n    [setEditingTaskId]\n  );\n  const close = useCallback(() => {\n    setEditingTaskId({ editingTaskId: \"\" });\n  }, [setEditingTaskId]);\n  return {\n    editingTaskId,\n    editingTask,\n    isLoading,\n    startEdit,\n    close,\n  };\n};\n","import { useHttp } from \"./http\";\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Panel } from \"../types/panel\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useReorderKanbanConfig,\n} from \"./use-optimistic-options\";\n\nexport const usePanels = (param?: Partial<Panel>) => {\n  const client = useHttp();\n  return useQuery<Panel[]>([\"panel\", param], () =>\n    client(\"kanbans\", { data: param })\n  );\n};\n\nexport const useAddPanel = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Panel>) =>\n      client(`kanbans`, {\n        method: \"POST\",\n        data: params,\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDeletePanel = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`kanbans/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n\nexport interface SortProps {\n  fromId: number; // 要重新排序的item\n  referenceId: number; // 目标item\n  type: \"before\" | \"after\"; // 放在目标的前还是后\n  fromKanbanId?: number;\n  toKanbanId?: number;\n}\n\nexport const useReorderPanel = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: SortProps) => {\n    return client(\"kanbans/reorder\", {\n      data: params,\n      method: \"POST\",\n    });\n  }, useReorderKanbanConfig(queryKey));\n};\n","import { TaskType } from \"../types/task\";\nimport { useHttp } from \"./http\";\nimport { useQuery } from \"react-query\";\n\nexport const useTaskTypes = () => {\n  const client = useHttp();\n  return useQuery<TaskType[]>([\"taskTypes\"], () => client(\"taskTypes\"));\n};\n","export default __webpack_public_path__ + \"static/media/task.8118694e.svg\";","export default __webpack_public_path__ + \"static/media/bug.bc7dca9d.svg\";","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useAddTask } from \"../../utils/task\";\nimport { useProjectIdInURL, useTaskQueryKey } from \"./utils\";\nimport { Button, Card, Input } from \"antd\";\n\nexport const CreateTask = ({ kanbanId }: { kanbanId: number }) => {\n  const [name, setName] = useState(\"\");\n  const [inputMode, setInputMode] = useState(false);\n  const { mutateAsync: addTask } = useAddTask(useTaskQueryKey());\n  const projectId = useProjectIdInURL();\n  const submit = async () => {\n    await addTask({ projectId, name, kanbanId });\n    setInputMode(false);\n    setName(\"\");\n  };\n  const toggle = () => setInputMode((mode) => !mode);\n  useEffect(() => {\n    if (!inputMode) setName(\"\");\n  }, [inputMode]);\n  if (!inputMode)\n    return (\n      <Button type={\"link\"} onClick={toggle}>\n        +添加任务\n      </Button>\n    );\n  return (\n    <Card>\n      <Input\n        autoFocus={true}\n        value={name}\n        onChange={(event) => setName(event.target.value)}\n        onPressEnter={submit}\n      />\n    </Card>\n  );\n};\n","// @flow\nimport * as React from \"react\";\n\ntype Props = {\n  name: string;\n  keyword: string;\n};\nexport const Mark = (props: Props) => {\n  const { name, keyword } = props;\n  if (!keyword) return <>{name}</>;\n  const arr = name.split(keyword);\n  return (\n    <>\n      {arr.map((str, index) => (\n        <span key={str + index}>\n          {!!str ? str : <span style={{ color: \"#fd252c\" }}>{keyword}</span>}\n        </span>\n      ))}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport {\n  Draggable,\n  DraggableProps,\n  Droppable,\n  DroppableProps,\n  DroppableProvided,\n  DroppableProvidedProps,\n} from \"react-beautiful-dnd\";\nimport { ReactNode } from \"react\";\n\ntype DropProps = Omit<DroppableProps, \"children\"> & { children: ReactNode };\nexport const Drop = ({ children, ...props }: DropProps) => {\n  return (\n    <Droppable {...props}>\n      {(provided) => {\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            provided,\n          });\n        }\n        return <div />;\n      }}\n    </Droppable>\n  );\n};\n\ntype DropChildProps = Partial<\n  {\n    provided: DroppableProvided;\n  } & DroppableProvidedProps\n> &\n  React.HTMLAttributes<HTMLDivElement>;\nexport const DropChild = React.forwardRef<HTMLDivElement, DropChildProps>(\n  ({ children, ...props }, ref) => (\n    <div ref={ref} {...props}>\n      {children}\n      {props.provided?.placeholder}\n    </div>\n  )\n);\n\ntype DragProps = Omit<DraggableProps, \"children\"> & { children: ReactNode };\n\nexport const Drag = ({ children, ...props }: DragProps) => {\n  return (\n    <Draggable {...props}>\n      {(provided) => {\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            ref: provided.innerRef,\n          });\n        }\n        return <div />;\n      }}\n    </Draggable>\n  );\n};\n","// @flow\nimport * as React from \"react\";\nimport { Panel } from \"../../types/panel\";\nimport { useDeleteTask, useTasks } from \"../../utils/task\";\nimport {\n  usePanelQueryKey,\n  useTaskModal,\n  useTaskQueryKey,\n  useTasksSearchParams,\n} from \"./utils\";\nimport { useTaskTypes } from \"../../utils/task-type\";\nimport taskIcon from \"assets/task.svg\";\nimport bugIcon from \"assets/bug.svg\";\nimport styled from \"@emotion/styled\";\nimport { Button, Card, Dropdown, Menu, Modal } from \"antd\";\nimport { CreateTask } from \"./create-task\";\nimport { Task } from \"../../types/task\";\nimport { Mark } from \"../../components/mark\";\nimport { useDeletePanel } from \"../../utils/panel\";\nimport { Row } from \"components/libs\";\nimport style from \"style/card.module.less\";\nimport { MouseEvent } from \"react\";\nimport { Drag, Drop, DropChild } from \"../../components/drag-n-drop\";\nimport { DNDTypes } from \"../../types/dnd\";\n\ntype Props = {\n  panel: Panel;\n};\nexport const PanelColumn = React.forwardRef<HTMLDivElement, Props>(\n  (props, ref) => {\n    const { panel, ...rest } = props;\n    const { data: allTasks = [] } = useTasks(useTasksSearchParams());\n    const tasks = allTasks?.filter((task) => task.kanbanId === panel.id);\n    return (\n      <Container ref={ref} {...rest}>\n        <Row between={true}>\n          <h3>{panel.name}</h3>\n          <MoreBtn panel={panel} />\n        </Row>\n        <TasksContainer>\n          <Drop\n            droppableId={`${panel.id}`}\n            type={DNDTypes.ROW}\n            direction={\"vertical\"}\n          >\n            <DropChild style={{ minHeight: \"10px\" }}>\n              {tasks?.map((task, index) => (\n                <Drag\n                  key={task.id}\n                  draggableId={\"task\" + task.id}\n                  index={index}\n                >\n                  <div>\n                    <TaskCard task={task} />\n                  </div>\n                </Drag>\n              ))}\n            </DropChild>\n          </Drop>\n          <CreateTask kanbanId={panel.id} />\n        </TasksContainer>\n      </Container>\n    );\n  }\n);\n\nconst TaskTypeIcon = ({ id }: { id: number }) => {\n  const { data: taskTypes } = useTaskTypes();\n  const name = taskTypes?.find((taskType) => taskType.id === id)?.name;\n  if (!name) {\n    return null;\n  }\n  return <img src={name === \"task\" ? taskIcon : bugIcon} alt={name} />;\n};\n\nexport const Container = styled.div`\n  min-width: 27rem;\n  border-radius: 6px;\n  background-color: rgb(244, 245, 247);\n  display: flex;\n  flex-direction: column;\n  padding: 0.7rem 0.7rem 1rem;\n  margin-right: 1.5rem;\n`;\n\nconst TasksContainer = styled.div`\n  overflow: scroll;\n  flex: 1;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst TaskCard = ({ task }: { task: Task }) => {\n  const { startEdit } = useTaskModal();\n  const { name: keyword } = useTasksSearchParams();\n  const { mutateAsync: deleteTask } = useDeleteTask(useTaskQueryKey());\n  const onDel = (evt: MouseEvent<HTMLElement>) => {\n    evt.stopPropagation();\n    Modal.confirm({\n      title: `确定删除任务'${task.name}'?`,\n      okText: `确定`,\n      cancelText: \"取消\",\n      onOk: () => deleteTask({ id: task.id }),\n    });\n  };\n  return (\n    <Card\n      onClick={() => startEdit(task.id)}\n      style={{ marginBottom: \"0.5rem\", cursor: \"pointer\" }}\n      key={task.id}\n      className={style.TaskCard}\n    >\n      <div>\n        <Mark keyword={keyword} name={task.name} />\n      </div>\n      <Row between={true}>\n        <TaskTypeIcon id={task.typeId} />\n        <Button className={style.DeleteTaskBtn} type={\"link\"} onClick={onDel}>\n          删除\n        </Button>\n      </Row>\n    </Card>\n  );\n};\n\nconst MoreBtn = ({ panel }: { panel: Panel }) => {\n  const { mutateAsync: deletePanel } = useDeletePanel(usePanelQueryKey());\n  const onDelete = () => {\n    Modal.confirm({\n      okText: \"确定\",\n      cancelText: \"取消\",\n      title: `确定删除看板'${panel.name}'么?`,\n      onOk: () => deletePanel({ id: panel.id }),\n    });\n  };\n  const overlay = (\n    <Menu>\n      <Menu.Item>\n        <Button type={\"link\"} onClick={onDelete}>\n          删除\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Dropdown overlay={overlay}>\n      <Button type={\"link\"}>...</Button>\n    </Dropdown>\n  );\n};\n","import { IdSelect } from \"./id-select\";\nimport React from \"react\";\nimport { useTaskTypes } from \"../utils/task-type\";\n\nexport const TaskTypeSelect = (\n  props: React.ComponentProps<typeof IdSelect>\n) => {\n  const { data: taskTypes } = useTaskTypes();\n  return <IdSelect options={taskTypes || []} {...props} />;\n};\n","import React from \"react\";\nimport { useTasksSearchParams } from \"./utils\";\nimport { useSetSearchParams } from \"../../utils/url\";\nimport { Row } from \"components/libs\";\nimport { Button, Input } from \"antd\";\nimport { UserSelect } from \"components/user-select\";\nimport { TaskTypeSelect } from \"components/task-type-select\";\n\nfunction SearchPanel() {\n  const searchParam = useTasksSearchParams();\n  const setSearchParams = useSetSearchParams();\n  const reset = () => {\n    setSearchParams({\n      typeId: undefined,\n      processorId: undefined,\n      tagId: undefined,\n      name: undefined,\n    });\n  };\n  return (\n    <Row marginBottom={4} gap={true}>\n      <Input\n        style={{ width: \"20rem\" }}\n        placeholder={\"任务名\"}\n        value={searchParam.name}\n        onChange={(evt) => setSearchParams({ name: evt.target.value })}\n      />\n      <UserSelect\n        defaultOptionName={\"经办人\"}\n        value={searchParam.processorId}\n        onChange={(value) => setSearchParams({ processorId: value })}\n      />\n      <TaskTypeSelect\n        defaultOptionName={\"类型\"}\n        value={searchParam.typeId}\n        onChange={(value) => setSearchParams({ typeId: value })}\n      />\n      <Button onClick={reset}>清楚筛选</Button>\n    </Row>\n  );\n}\n\nexport default SearchPanel;\n","import React, { useState } from \"react\";\nimport { usePanelQueryKey, useProjectIdInURL } from \"./utils\";\nimport { useAddPanel } from \"../../utils/panel\";\nimport { Input } from \"antd\";\nimport { Container as PanelContainer } from \"./panel-column\";\n\nconst CreatePanel = () => {\n  const [name, setName] = useState(\"\");\n  const projectId = useProjectIdInURL();\n  const { mutateAsync: addPanel } = useAddPanel(usePanelQueryKey());\n  const submit = async () => {\n    await addPanel({ name, projectId });\n    setName(\"\");\n  };\n  return (\n    <PanelContainer>\n      <Input\n        size={\"large\"}\n        placeholder={\"新建看板名称\"}\n        onPressEnter={submit}\n        value={name}\n        onChange={(evt) => setName(evt.target.value)}\n      />\n    </PanelContainer>\n  );\n};\n\nexport default CreatePanel;\n","import * as React from \"react\";\nimport { useForm } from \"antd/es/form/Form\";\nimport { useTaskModal, useTaskQueryKey } from \"./utils\";\nimport { useEditTask } from \"../../utils/task\";\nimport { useEffect } from \"react\";\nimport { Form, Input, Modal } from \"antd\";\nimport { UserSelect } from \"../../components/user-select\";\nimport { TaskTypeSelect } from \"components/task-type-select\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nexport const TaskModal = () => {\n  const [form] = useForm();\n  const { editingTask, editingTaskId, close } = useTaskModal();\n  const { mutateAsync: editTask, isLoading: editLoading } = useEditTask(\n    useTaskQueryKey()\n  );\n  const onCancel = () => {\n    form.resetFields();\n    close();\n  };\n  const onOk = async () => {\n    await editTask({ ...editingTask, ...form.getFieldsValue() });\n    close();\n  };\n  useEffect(() => {\n    form.setFieldsValue({\n      ...editingTask,\n      processorId: editingTask?.processorId,\n    });\n  }, [form, editingTask]);\n  return (\n    <Modal\n      okText={\"确认\"}\n      cancelText={\"取消\"}\n      confirmLoading={editLoading}\n      title={\"编辑任务\"}\n      visible={!!editingTaskId}\n      onCancel={onCancel}\n      onOk={onOk}\n      forceRender={true}\n    >\n      <Form {...layout} initialValues={editingTask} form={form}>\n        <Form.Item\n          label={\"任务名\"}\n          name={\"name\"}\n          rules={[{ required: true, message: \"请输入任务名\" }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item label={\"经办人\"} name={\"processorId\"}>\n          <UserSelect defaultOptionName={\"经办人\"} />\n        </Form.Item>\n        <Form.Item label={\"类型\"} name={\"typeId\"}>\n          <TaskTypeSelect />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n","import { useDocumentTitle } from \"../../utils\";\nimport {\n  usePanelQueryKey,\n  usePanelSearchParams,\n  useProjectInUrl,\n  useTaskQueryKey,\n  useTasksSearchParams,\n} from \"./utils\";\nimport { usePanels, useReorderPanel } from \"../../utils/panel\";\nimport * as React from \"react\";\nimport { PanelColumn } from \"./panel-column\";\nimport styled from \"@emotion/styled\";\nimport SearchPanel from \"./search-panel\";\nimport { PageContainer } from \"../../components/libs\";\nimport { useReorderTask, useTasks } from \"../../utils/task\";\nimport { Spin } from \"antd\";\nimport CreatePanel from \"./create-panel\";\nimport { TaskModal } from \"./task-modal\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { Drag, Drop, DropChild } from \"../../components/drag-n-drop\";\nimport { DNDTypes } from \"../../types/dnd\";\nimport { useCallback } from \"react\";\n\nexport const ProjectPanel = () => {\n  useDocumentTitle(\"看板列表\");\n  const { data: currentProject } = useProjectInUrl();\n  const { data: panels = [], isLoading: panelIsLoading } = usePanels(\n    usePanelSearchParams()\n  );\n  const { isLoading: taskIsLoading } = useTasks(useTasksSearchParams());\n  const isLoading = taskIsLoading || panelIsLoading;\n  const onDragEnd = useDragEnd();\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <PageContainer>\n        <h1>{currentProject?.name}看板</h1>\n        <SearchPanel />\n        {isLoading ? (\n          <Spin size={\"large\"} />\n        ) : (\n          <ColumnContainer>\n            <Drop\n              type={DNDTypes.COLUMN}\n              direction={\"horizontal\"}\n              droppableId={\"kanban\"}\n            >\n              <DropChild style={{ display: \"flex\" }}>\n                {panels?.map((panel, index) => (\n                  <Drag\n                    key={panel.id}\n                    draggableId={\"kanban\" + panel.id}\n                    index={index}\n                  >\n                    <PanelColumn panel={panel} />\n                  </Drag>\n                ))}\n              </DropChild>\n            </Drop>\n            <CreatePanel />\n          </ColumnContainer>\n        )}\n        <TaskModal />\n      </PageContainer>\n    </DragDropContext>\n  );\n};\n\nexport const useDragEnd = () => {\n  const { data: panels } = usePanels(usePanelSearchParams());\n  const { data: allTasks = [] } = useTasks(useTasksSearchParams());\n  const { mutate: reorderPanel } = useReorderPanel(usePanelQueryKey());\n  const { mutate: reorderTask } = useReorderTask(useTaskQueryKey());\n  return useCallback(\n    ({ source, destination, type }: DropResult) => {\n      if (!destination) {\n        return;\n      }\n      if (type === DNDTypes.COLUMN) {\n        const fromId = panels?.[source.index].id;\n        const toId = panels?.[destination.index].id;\n        if (!fromId || !toId || fromId === toId) {\n          return;\n        }\n        const type = destination.index > source.index ? \"after\" : \"before\";\n        reorderPanel({ fromId, referenceId: toId, type });\n      } else if (type === DNDTypes.ROW) {\n        const fromPanelId = +source.droppableId;\n        const toPanelId = +destination.droppableId;\n        /*if (fromPanelId === toPanelId) {\n          return;\n        }*/\n        const fromTask = allTasks.filter(\n          (task) => task.kanbanId === fromPanelId\n        )[source.index];\n        const toTask = allTasks.filter((task) => task.kanbanId === toPanelId)[\n          destination.index\n        ];\n        if (fromTask?.id === toTask?.id) return;\n        reorderTask({\n          fromId: fromTask?.id,\n          referenceId: toTask?.id,\n          fromKanbanId: fromPanelId,\n          toKanbanId: toPanelId,\n          type:\n            fromPanelId === toPanelId && destination.index > source.index\n              ? \"after\"\n              : \"before\",\n        });\n      }\n    },\n    [allTasks, panels, reorderPanel, reorderTask]\n  );\n};\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  overflow-x: auto;\n  margin-right: 2rem;\n  flex: 1;\n`;\n","import { useProjectIdInURL } from \"../project-panel/utils\";\n\nexport const useEpicSearchParams = () => ({\n  projectId: useProjectIdInURL(),\n});\n\nexport const useEpicsQueryKey = () => [\"epics\", useEpicSearchParams()];\n","import React, { useEffect } from \"react\";\nimport { Button, Drawer, DrawerProps, Form, Input, Spin } from \"antd\";\nimport { ErrorBox } from \"../../components/libs\";\nimport { useAddEpic } from \"../../utils/epic\";\nimport { useEpicsQueryKey } from \"./utils\";\nimport { useForm } from \"antd/es/form/Form\";\nimport styled from \"@emotion/styled\";\nimport { useProjectIdInURL } from \"../project-panel/utils\";\n\nconst CreateEpic = (\n  props: Pick<DrawerProps, \"visible\"> & { onClose: () => void }\n) => {\n  const { mutate: addEpic, isLoading, error } = useAddEpic(useEpicsQueryKey());\n  const projectId = useProjectIdInURL();\n  const [form] = useForm();\n  const onFinish = async (values: any) => {\n    await addEpic({ ...values, projectId: projectId });\n    props.onClose();\n  };\n  useEffect(() => {\n    form.resetFields();\n  }, [form, props.visible]);\n  return (\n    <Drawer\n      visible={props.visible}\n      onClose={props.onClose}\n      forceRender={true}\n      destroyOnClose={true}\n      width={\"100%\"}\n    >\n      <Container>\n        {isLoading ? (\n          <Spin size={\"large\"} />\n        ) : (\n          <>\n            <h1>创建任务组</h1>\n            <ErrorBox error={error} />\n            <Form\n              layout={\"vertical\"}\n              style={{ width: \"40rem\" }}\n              onFinish={onFinish}\n              form={form}\n            >\n              <Form.Item\n                label={\"名称\"}\n                name={\"name\"}\n                rules={[{ required: true, message: \"请输入任务组名\" }]}\n              >\n                <Input placeholder={\"请输入任务组名称\"} />\n              </Form.Item>\n              <Form.Item style={{ textAlign: \"right\" }}>\n                <Button\n                  loading={isLoading}\n                  type={\"primary\"}\n                  htmlType={\"submit\"}\n                >\n                  提交\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n        )}\n      </Container>\n    </Drawer>\n  );\n};\nconst Container = styled.div`\n  height: 80vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport default CreateEpic;\n","import { useHttp } from \"./http\";\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { useAddConfig, useDeleteConfig } from \"./use-optimistic-options\";\nimport { Epic } from \"../types/epic\";\n\nexport const useEpics = (param?: Partial<Epic>) => {\n  const client = useHttp();\n  return useQuery<Epic[]>([\"epics\", param], () =>\n    client(\"epics\", { data: param })\n  );\n};\n\nexport const useAddEpic = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Epic>) =>\n      client(`epics`, {\n        method: \"POST\",\n        data: params,\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDeleteEpic = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`epics/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n","import { PageContainer, Row } from \"../../components/libs\";\nimport { useProjectInUrl } from \"../project-panel/utils\";\nimport { useDeleteEpic, useEpics } from \"../../utils/epic\";\nimport { useEpicSearchParams, useEpicsQueryKey } from \"./utils\";\nimport { Button, List, Modal } from \"antd\";\nimport dayjs from \"dayjs\";\nimport { useTasks } from \"../../utils/task\";\nimport { Link } from \"react-router-dom\";\nimport { Epic } from \"../../types/epic\";\nimport CreateEpic from \"./create-epic\";\nimport { useState } from \"react\";\nimport React from \"react\";\n\nexport const EpicPage = () => {\n  const { data: currentProject } = useProjectInUrl();\n  const { data: epics } = useEpics(useEpicSearchParams());\n  const { data: tasks } = useTasks(useEpicSearchParams());\n  const { mutate: deleteEpic } = useDeleteEpic(useEpicsQueryKey());\n  const [epitCreateOpen, setEpicCreateOpen] = useState(false);\n  const confirmDeleteEpic = (epic: Epic) => {\n    Modal.confirm({\n      title: `确定删除项目组:${epic.name}`,\n      content: \"点击确认删除\",\n      okText: \"确认\",\n      cancelText: \"取消\",\n      onOk() {\n        deleteEpic({ id: epic.id });\n      },\n    });\n  };\n\n  return (\n    <PageContainer>\n      <Row between={true}>\n        <h1>{currentProject?.name}任务组</h1>\n        <Button onClick={() => setEpicCreateOpen(true)} type={\"link\"}>\n          创建任务组\n        </Button>\n      </Row>\n      <List\n        style={{ overflowY: \"auto\" }}\n        dataSource={epics}\n        itemLayout={\"vertical\"}\n        renderItem={(epic) => (\n          <List.Item>\n            <List.Item.Meta\n              title={\n                <Row between={true}>\n                  <span>{epic.name}</span>\n                  <Button type={\"link\"} onClick={() => confirmDeleteEpic(epic)}>\n                    删除\n                  </Button>\n                </Row>\n              }\n              description={\n                <div>\n                  <div>开始时间：2023-08-05</div>\n                  <div>结束时间：{dayjs().format(\"YYYY-MM-DD\")}</div>\n                </div>\n              }\n            />\n            <div>\n              {tasks\n                ?.filter((task) => task.epicId === epic.id)\n                .map((task) => (\n                  <div key={task.name}>\n                    <Link\n                      to={`/projects/${currentProject?.id}/panel?editingTaskId=${task.id}`}\n                    >\n                      {task.name}\n                    </Link>\n                  </div>\n                ))}\n            </div>\n          </List.Item>\n        )}\n      />\n      <CreateEpic\n        onClose={() => setEpicCreateOpen(false)}\n        visible={epitCreateOpen}\n      />\n    </PageContainer>\n  );\n};\n","import { ProjectPanel } from \"page/project-panel\";\nimport { Routes, Route, Navigate } from \"react-router\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { EpicPage } from \"../Epic\";\nimport styled from \"@emotion/styled\";\nimport { Menu } from \"antd\";\nimport React from \"react\";\n\nconst useRouteType = () => {\n  const unit = useLocation().pathname.split(\"/\");\n  return unit[unit.length - 1];\n};\n\nexport const ProjectPage = () => {\n  const routeType = useRouteType();\n  return (\n    <Container>\n      <Aside>\n        <Menu mode={\"inline\"} selectedKeys={[routeType]}>\n          <Menu.Item key={\"panel\"}>\n            <Link to={\"panel\"}>看板</Link>\n          </Menu.Item>\n          <Menu.Item key={\"epic\"}>\n            <Link to={\"epic\"}>任务组</Link>\n          </Menu.Item>\n        </Menu>\n      </Aside>\n      <Main>\n        <Routes>\n          <Route path={\"/panel\"} element={<ProjectPanel />} />\n          <Route path={\"/epic\"} element={<EpicPage />} />\n          <Navigate to={window.location.pathname + \"/panel\"} replace={true} />\n        </Routes>\n      </Main>\n    </Container>\n  );\n};\n\nconst Aside = styled.aside`\n  background-color: rgb(244, 245, 247);\n  display: flex;\n`;\n\nconst Main = styled.div`\n  box-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.2);\n  display: flex;\n  overflow: hidden;\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 16rem 1fr;\n  height: 100%;\n`;\n","import { Drawer, Button, Spin, Form, Input } from \"antd\";\nimport { UserSelect } from \"components/user-select\";\nimport { useProjectModal, useProjectQueryKey } from \"./util\";\nimport { useAddProject, useEditProject } from \"../../utils/project\";\nimport { useForm } from \"antd/es/form/Form\";\nimport { useEffect } from \"react\";\nimport { ErrorBox } from \"../../components/libs\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nexport const ProjectModal = () => {\n  const { projectModalOpen, close, editProject, isLoading } = useProjectModal();\n  const title = editProject ? \"编辑项目\" : \"创建项目\";\n  console.log(title);\n  const useMutateProject = editProject ? useEditProject : useAddProject;\n  const {\n    mutateAsync,\n    error,\n    isLoading: mutateLoading,\n  } = useMutateProject(useProjectQueryKey());\n  const [form] = useForm();\n  const onFinish = (value: any) => {\n    mutateAsync({ ...editProject, ...value }).then(() => {\n      form.resetFields();\n      close();\n    });\n  };\n  const modalClose = () => {\n    form.resetFields();\n    close();\n  };\n  useEffect(() => {\n    form.setFieldsValue(editProject);\n  }, [editProject, form]);\n  return (\n    <Drawer\n      forceRender={true}\n      onClose={modalClose}\n      visible={projectModalOpen}\n      width={\"100%\"}\n    >\n      <Container>\n        {isLoading ? (\n          <Spin size={\"large\"} />\n        ) : (\n          <>\n            <h1>{title}</h1>\n            <ErrorBox error={error} />\n            <Form\n              layout={\"vertical\"}\n              style={{ width: \"40rem\" }}\n              onFinish={onFinish}\n              form={form}\n            >\n              <Form.Item\n                label={\"名称\"}\n                name={\"name\"}\n                rules={[{ required: true, message: \"请输入项目名\" }]}\n              >\n                <Input placeholder={\"请输入项目名称\"} />\n              </Form.Item>\n              <Form.Item\n                label={\"部门\"}\n                name={\"organization\"}\n                rules={[{ required: true, message: \"请输入部门\" }]}\n              >\n                <Input placeholder={\"请输入部门名\"} />\n              </Form.Item>\n              <Form.Item label={\"负责人\"} name={\"personId\"}>\n                <UserSelect defaultOptionName={\"负责人\"} />\n              </Form.Item>\n              <Form.Item style={{ textAlign: \"right\" }}>\n                <Button\n                  loading={mutateLoading}\n                  type={\"primary\"}\n                  htmlType={\"submit\"}\n                >\n                  提交\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n        )}\n        {/*<Button onClick={close}>关闭</Button>*/}\n      </Container>\n    </Drawer>\n  );\n};\n\nconst Container = styled.div`\n  height: 80vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n","import { Divider, List, Popover, Typography } from \"antd\";\nimport { useProjects } from \"../utils/project\";\nimport styled from \"@emotion/styled\";\nimport { ButtonNoPad } from \"./libs\";\nimport React from \"react\";\nimport { useProjectModal } from \"../page/project-list/util\";\n\nexport const ProjectPopover = () => {\n  const { open } = useProjectModal();\n  const { data: projects, isLoading, refetch } = useProjects();\n  const pinedProjects = projects?.filter((project) => project.pin);\n  const content = (\n    <ContentContainer>\n      <Typography.Text type={\"secondary\"}>收藏项目</Typography.Text>\n      <List loading={isLoading}>\n        {pinedProjects?.map((project) => {\n          return (\n            <List.Item key={project.id}>\n              <List.Item.Meta title={project.name} />\n            </List.Item>\n          );\n        })}\n      </List>\n      <Divider style={{ backgroundColor: \"#eee\" }} />\n      <ButtonNoPad type={\"link\"} onClick={open}>\n        创建项目\n      </ButtonNoPad>\n    </ContentContainer>\n  );\n  return (\n    <Popover\n      onVisibleChange={() => refetch()}\n      placement={\"bottom\"}\n      content={content}\n    >\n      <span>项目</span>\n    </Popover>\n  );\n};\n\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`;\n","import { List, Popover, Typography } from \"antd\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { useUsers } from \"../utils/user\";\n\nexport const UserPopover = () => {\n  const { data: users, isLoading, refetch } = useUsers();\n  const content = (\n    <ContentContainer>\n      <Typography.Text type={\"secondary\"}>小组成员</Typography.Text>\n      <List loading={isLoading}>\n        {users?.map((user) => {\n          return (\n            <List.Item key={user.id}>\n              <List.Item.Meta title={user.name} />\n            </List.Item>\n          );\n        })}\n      </List>\n    </ContentContainer>\n  );\n  return (\n    <Popover\n      onVisibleChange={() => refetch()}\n      placement={\"bottom\"}\n      content={content}\n    >\n      <span>组员</span>\n    </Popover>\n  );\n};\n\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`;\n","import { ProjectListPage } from \"page/project-list\";\nimport React from \"react\";\nimport { useAuth } from \"./context/auth-context\";\nimport styled from \"@emotion/styled\";\nimport { ButtonNoPad, Row } from \"./components/libs\";\nimport { Button, Dropdown, Menu } from \"antd\";\nimport { Navigate, Route, Routes } from \"react-router\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ProjectPage } from \"./page/project\";\nimport { resetRoute } from \"./utils\";\nimport { ProjectModal } from \"./page/project-list/project-modal\";\nimport { ProjectPopover } from \"./components/project-popover\";\nimport { UserPopover } from \"./components/user-popover\";\n\nconst AuthenticatedApp = () => {\n  /*\n  props中传递一个JSX, 组合Composition, 深层子组件不需要管父组件中的状态，只需要单纯的渲染出来就行\n  一定意义上能简化代码，解耦，对父组件有更多的把控\n   */\n  return (\n    <Container>\n      <Router>\n        <PageHeader />\n        <Main>\n          <Routes>\n            <Route path={\"/projects\"} element={<ProjectListPage />} />\n            <Route path={\"/projects/:projectId/*\"} element={<ProjectPage />} />\n            <Navigate to={\"/projects\"} />\n          </Routes>\n        </Main>\n        <ProjectModal />\n      </Router>\n    </Container>\n  );\n};\n\n/*\nprops中传递一个JSX, 组合Composition, 深层子组件不需要管父组件中的状态，只需要单纯的渲染出来就行\n */\nconst PageHeader = () => {\n  return (\n    <Header between={true}>\n      <HeaderLeft gap>\n        <ButtonNoPad type={\"link\"} onClick={resetRoute}>\n          taskMangeSystem\n        </ButtonNoPad>\n        <ProjectPopover />\n        <UserPopover />\n      </HeaderLeft>\n      <HeaderRight>\n        <User />\n      </HeaderRight>\n    </Header>\n  );\n};\n\nconst User = () => {\n  const { logout, user } = useAuth();\n  return (\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item key={\"logout\"}>\n            <Button type={\"link\"} onClick={logout}>\n              登出\n            </Button>\n          </Menu.Item>\n        </Menu>\n      }\n    >\n      <Button type={\"link\"} onClick={(e) => e.preventDefault()}>\n        Hi, {user?.name}\n      </Button>\n    </Dropdown>\n  );\n};\n\nconst Header = styled(Row)`\n  padding: 3.2rem;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.3);\n  z-index: 1;\n`;\n\nconst HeaderLeft = styled(Row)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst HeaderRight = styled.div``;\nconst Main = styled.main`\n  height: calc(100vh - 6rem);\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 6rem 1fr 6rem;\n  height: 100vh;\n`;\n\nexport default AuthenticatedApp;\n"],"sourceRoot":""}