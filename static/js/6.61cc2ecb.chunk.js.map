{"version":3,"sources":["unauthenticated-app/login.tsx","unauthenticated-app/register.tsx","unauthenticated-app/index.tsx"],"names":["LoginPage","onError","login","useAuth","useAsync","undefined","throwOnError","run","isLoading","onFinish","values","catch","Item","name","rules","required","message","placeholder","type","id","LongButton","htmlType","loading","RegisterPage","register","handleSubmit","a","cpassword","password","Error","Container","styled","div","ShadowCard","Card","Header","header","Title","h2","Button","UnauthenticatedApp","useState","isRegister","setIsRegister","error","setError","onClick"],"mappings":"iQAOaA,EAAY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAClBC,EAAUC,cAAVD,MADgD,EAE7BE,iBAASC,EAAW,CAAEC,cAAc,IAAvDC,EAFgD,EAEhDA,IAAKC,EAF2C,EAE3CA,UAKb,OACE,gBAAC,IAAD,CAAMC,SAJa,SAACC,GACpBH,EAAIL,EAAMQ,IAASC,MAAMV,KAIvB,gBAAC,IAAKW,KAAN,CACEC,KAAM,WACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,0CAEnC,gBAAC,IAAD,CAAOC,YAAa,qBAAOC,KAAK,OAAOC,GAAI,cAE7C,gBAAC,IAAKP,KAAN,CACEC,KAAM,WACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oCAEnC,gBAAC,IAAD,CAAOC,YAAa,eAAMC,KAAK,WAAWC,GAAI,SAEhD,gBAAC,IAAKP,KAAN,KACE,gBAACQ,EAAD,CAAYC,SAAU,SAAUH,KAAM,UAAWI,QAASd,GAA1D,mB,kCCpBKe,EAAe,SAAC,GAAiC,IAA/BtB,EAA8B,EAA9BA,QACrBuB,EAAarB,cAAbqB,SADmD,EAEhCpB,iBAASC,EAAW,CAAEC,cAAc,IAAvDC,EAFmD,EAEnDA,IAAKC,EAF8C,EAE9CA,UACPiB,EAAY,uCAAG,+BAAAC,EAAA,yDACnBC,EADmB,EACnBA,UACGjB,EAFgB,6BAQfiB,IAAcjB,EAAOkB,SARN,uBASjB3B,EAAQ,IAAI4B,MAAM,6EATD,mDAaXtB,EAAIiB,EAASd,IAbF,uDAejBT,EAAQ,EAAD,IAfU,yDAAH,sDAkBlB,OACE,gBAAC,IAAD,CAAMQ,SAAUgB,GACd,gBAAC,IAAKb,KAAN,CACEC,KAAM,WACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,0CAEnC,gBAAC,IAAD,CAAOC,YAAa,qBAAOC,KAAK,OAAOC,GAAI,cAE7C,gBAAC,IAAKP,KAAN,CACEC,KAAM,WACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oCAEnC,gBAAC,IAAD,CAAOC,YAAa,eAAMC,KAAK,WAAWC,GAAI,SAEhD,gBAAC,IAAKP,KAAN,CACEC,KAAM,YACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oCAEnC,gBAAC,IAAD,CAAOC,YAAa,2BAAQC,KAAK,WAAWC,GAAI,SAElD,gBAAC,IAAKP,KAAN,KACE,gBAACQ,EAAD,CAAYC,SAAU,SAAUH,KAAM,UAAWI,QAASd,GAA1D,mB,kCCjBFsB,EAAYC,IAAOC,IAAV,+IASTC,EAAaF,YAAOG,IAAPH,CAAH,oNAUVI,EAASJ,IAAOK,OAAV,oJASNC,EAAQN,IAAOO,GAAV,yEAKElB,EAAaW,YAAOQ,IAAPR,CAAH,4CAIRS,UAhEY,WAAO,IAAD,EACKC,oBAAS,GADd,mBACxBC,EADwB,KACZC,EADY,OAELF,mBAAuB,MAFlB,mBAExBG,EAFwB,KAEjBC,EAFiB,KAG/B,OACE,kBAACf,EAAD,KACE,kBAACK,EAAD,wBACA,kBAACF,EAAD,KACE,kBAACI,EAAD,KAAQK,EAAa,eAAO,gBAC3BE,EAAQ,kBAAC,IAAD,CAAUA,MAAOA,IAAY,KACrCF,EACC,kBAAC,EAAD,CAAczC,QAAS4C,IAEvB,kBAAC,EAAD,CAAW5C,QAAS4C,IAEtB,uBACEC,QAAS,WACPH,GAAeD,GACfG,EAAS,QAGVH,EAAa,yDAAc","file":"static/js/6.61cc2ecb.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useAuth } from \"../context/auth-context\";\nimport { Form, Input } from \"antd\";\nimport { LongButton } from \"./index\";\nimport { WithErrorProps } from \"./register\";\nimport { useAsync } from \"../utils/use-async\";\n\nexport const LoginPage = ({ onError }: WithErrorProps) => {\n  const { login } = useAuth();\n  const { run, isLoading } = useAsync(undefined, { throwOnError: true });\n\n  const handleSubmit = (values: { username: string; password: string }) => {\n    run(login(values)).catch(onError);\n  };\n  return (\n    <Form onFinish={handleSubmit}>\n      <Form.Item\n        name={\"username\"}\n        rules={[{ required: true, message: \"请输入用户名\" }]}\n      >\n        <Input placeholder={\"用户名\"} type=\"text\" id={\"username\"} />\n      </Form.Item>\n      <Form.Item\n        name={\"password\"}\n        rules={[{ required: true, message: \"请输入密码\" }]}\n      >\n        <Input placeholder={\"密码\"} type=\"password\" id={\"pwd\"} />\n      </Form.Item>\n      <Form.Item>\n        <LongButton htmlType={\"submit\"} type={\"primary\"} loading={isLoading}>\n          登录\n        </LongButton>\n      </Form.Item>\n    </Form>\n  );\n};\n","import * as React from \"react\";\nimport { useAuth } from \"../context/auth-context\";\nimport { Form, Input } from \"antd\";\nimport { LongButton } from \"unauthenticated-app\";\nimport { useAsync } from \"../utils/use-async\";\n\nexport type WithErrorProps = {\n  onError: (error: Error) => void;\n};\nexport const RegisterPage = ({ onError }: WithErrorProps) => {\n  const { register } = useAuth();\n  const { run, isLoading } = useAsync(undefined, { throwOnError: true });\n  const handleSubmit = async ({\n    cpassword,\n    ...values\n  }: {\n    username: string;\n    password: string;\n    cpassword: string;\n  }) => {\n    if (cpassword !== values.password) {\n      onError(new Error(\"请确认两次输入的密码相同\"));\n      return;\n    }\n    try {\n      await run(register(values));\n    } catch (e) {\n      onError(e);\n    }\n  };\n  return (\n    <Form onFinish={handleSubmit}>\n      <Form.Item\n        name={\"username\"}\n        rules={[{ required: true, message: \"请输入用户名\" }]}\n      >\n        <Input placeholder={\"用户名\"} type=\"text\" id={\"username\"} />\n      </Form.Item>\n      <Form.Item\n        name={\"password\"}\n        rules={[{ required: true, message: \"请输入密码\" }]}\n      >\n        <Input placeholder={\"密码\"} type=\"password\" id={\"pwd\"} />\n      </Form.Item>\n      <Form.Item\n        name={\"cpassword\"}\n        rules={[{ required: true, message: \"请输入密码\" }]}\n      >\n        <Input placeholder={\"确认密码\"} type=\"password\" id={\"pwd\"} />\n      </Form.Item>\n      <Form.Item>\n        <LongButton htmlType={\"submit\"} type={\"primary\"} loading={isLoading}>\n          注册\n        </LongButton>\n      </Form.Item>\n    </Form>\n  );\n};\n","import React, { useState } from \"react\";\nimport { LoginPage } from \"./login\";\nimport { RegisterPage } from \"./register\";\nimport { Button, Card } from \"antd\";\nimport styled from \"@emotion/styled\";\nimport { ErrorBox } from \"../components/libs\";\n\nconst UnauthenticatedApp = () => {\n  const [isRegister, setIsRegister] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  return (\n    <Container>\n      <Header>taskMangeSystem</Header>\n      <ShadowCard>\n        <Title>{isRegister ? \"注册\" : \"登录\"}</Title>\n        {error ? <ErrorBox error={error} /> : null}\n        {isRegister ? (\n          <RegisterPage onError={setError} />\n        ) : (\n          <LoginPage onError={setError} />\n        )}\n        <a\n          onClick={() => {\n            setIsRegister(!isRegister);\n            setError(null);\n          }}\n        >\n          {isRegister ? \"已有账号？直接登录\" : \"没有账号？注册新账号\"}\n        </a>\n      </ShadowCard>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n  background: #f1f3f4;\n`;\n\n// 可以替换antd组件的样式\nconst ShadowCard = styled(Card)`\n  width: 40rem;\n  min-height: 46rem;\n  padding: 3.2rem 4rem;\n  border-radius: 0.3rem;\n  box-sizing: border-box;\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n  text-align: center;\n`;\n\nconst Header = styled.header`\n  padding: 3rem 0;\n  width: 100%;\n  text-align: center;\n  font-weight: bold;\n  font-size: 3rem;\n  color: #2372d9;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 1.4rem;\n  color: #2372d9;\n`;\n\nexport const LongButton = styled(Button)`\n  width: 100%;\n`;\n\nexport default UnauthenticatedApp;\n"],"sourceRoot":""}